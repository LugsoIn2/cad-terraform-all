# Default values for adminservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 150625325991.dkr.ecr.eu-central-1.amazonaws.com/cad-adminservice
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "adminservice"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host:
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  secret:
    # Access Key for dynamodb user:
    AWS_ACCESS_KEY: aws_db_access_key
    AWS_SECRET: aws_db_secret
    # Access Key for terraform provider user
    TF_VAR_access_key: aws_tf_access_key
    TF_VAR_secret_key: aws_tf_secret
    # Access Key for eventservice deployment
    TF_VAR_aws_db_user_eventservice_access_key: aws_eventservice_access_key
    TF_VAR_aws_db_user_eventservice_secret_key: aws_eventservice_secret
    #GH Token for UI-Service building
    TF_VAR_gh_token: gh_token
    # Access Key for scraper-generic cronjob
    TF_VAR_aws_db_user_scraper_generic_access_key: aws_scraper_generic_access_key
    TF_VAR_aws_db_user_scraper_generic_secret_key: aws_scraper_generic_secret
    # Django env Vars
    ALLOWED_HOSTS: "localhost,127.0.0.1"
    ADMINTABLE_ENDPOINT: ''
    DBNAME: ''
    DB_USERNAME: ''
    DB_PASSWORD: ''
    DB_PORT: '3306'
    TEN_TABLE_NAME: 'tenants'


