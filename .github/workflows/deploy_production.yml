name: Deploy_Production
#on: [repository_dispatch]
on: workflow_dispatch

env:
 TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
 TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 TF_VAR_gh_token: ${{ secrets.ACTIONS_KEY }}
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 AWS_REGION: eu-central-1
 TF_VAR_admindb_password: ${{ secrets.ADMINDB_PASSWORD }}
 TF_VAR_admindb_username: ${{ secrets.ADMINDB_USERNAME }}
 #GITHUB_TOKEN: ${{ secrets.ACTIONS_KEY }}
 #TF_LOG: "TRACE"


jobs:
  terraform:
    name: "Github cli and Terraform"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.3.0]
    defaults:
      run:
        working-directory: ./prod/
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Check if EKS-Cluster CAD-Event is created
        working-directory: ./local_helper/
        run: |
          chmod +x eks_cluster_check.sh
          ./eks_cluster_check.sh deploy-services
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Terraform Init
        id: init
        run: terraform init -var="env=dev"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform workspace
        id: workspace
        run: terraform workspace select prod

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan -no-color -input=false
      
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false