name: Destroy_EKS_Cluster
on: workflow_dispatch

env:
 TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
 TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 TF_VAR_domainname_external_dns: "aws.netpy.de"
 TF_VAR_hostedzoneid_external_dns: ${{ secrets.ROUTE53_ZONE_ID }}
 TF_VAR_map_aws_eks_auth_iam_users: ${{ secrets.MAP_EKS_IAM_USERS }}
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 AWS_REGION: eu-central-1
 #GITHUB_TOKEN: ${{ secrets.ACTIONS_KEY }}
 #TF_LOG: "TRACE"


jobs:
  terraform:
    name: "AWS EKS deploy Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./aws_basic_setup/k8s_eks_setup/
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Check if EKS-Cluster CAD-Event is created
        working-directory: ./local_helper/
        run: |
          chmod +x eks_cluster_check.sh
          ./eks_cluster_check.sh destroy-cluster
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init -var="env=dev"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform workspace
        id: workspace
        run: terraform workspace select eks_cluster
      
      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false